consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  GoaLocalUser:
    description: A User of locals (default view)
    example:
      area: Velit quia commodi dolorem.
      county: In harum dolores consequatur et.
      email: Ipsum optio magnam eos.
      firstName: Et non similique.
      href: Eos earum vitae magnam sunt.
      id: Quod sunt quibusdam suscipit eos sequi dolores.
      secondName: Id recusandae qui mollitia blanditiis corrupti eum.
      signupType: Aspernatur dignissimos eligendi facere.
      type: Aliquam qui.
    properties:
      area:
        description: The area of the users local council
        example: Velit quia commodi dolorem.
        type: string
      county:
        description: The county the user lives in
        example: In harum dolores consequatur et.
        type: string
      email:
        description: The email of the user
        example: Ipsum optio magnam eos.
        type: string
      firstName:
        description: Name of the user
        example: Et non similique.
        type: string
      href:
        description: API href for making requests on the bottle
        example: Eos earum vitae magnam sunt.
        type: string
      id:
        description: Unique bottle ID
        example: Quod sunt quibusdam suscipit eos sequi dolores.
        type: string
      secondName:
        description: Name of the user
        example: Id recusandae qui mollitia blanditiis corrupti eum.
        type: string
      signupType:
        description: the signupType of user google local
        example: Aspernatur dignissimos eligendi facere.
        type: string
      type:
        default: local
        description: the type of user admin local councillor
        example: Aliquam qui.
        type: string
    required:
    - firstName
    - secondName
    - email
    title: 'Mediatype identifier: application/vnd.goa.local.user+json; view=default'
    type: object
  GoaLocalUserCollection:
    description: GoaLocalUserCollection is the media type for an array of GoaLocalUser
      (default view)
    example:
    - area: Velit quia commodi dolorem.
      county: In harum dolores consequatur et.
      email: Ipsum optio magnam eos.
      firstName: Et non similique.
      href: Eos earum vitae magnam sunt.
      id: Quod sunt quibusdam suscipit eos sequi dolores.
      secondName: Id recusandae qui mollitia blanditiis corrupti eum.
      signupType: Aspernatur dignissimos eligendi facere.
      type: Aliquam qui.
    - area: Velit quia commodi dolorem.
      county: In harum dolores consequatur et.
      email: Ipsum optio magnam eos.
      firstName: Et non similique.
      href: Eos earum vitae magnam sunt.
      id: Quod sunt quibusdam suscipit eos sequi dolores.
      secondName: Id recusandae qui mollitia blanditiis corrupti eum.
      signupType: Aspernatur dignissimos eligendi facere.
      type: Aliquam qui.
    - area: Velit quia commodi dolorem.
      county: In harum dolores consequatur et.
      email: Ipsum optio magnam eos.
      firstName: Et non similique.
      href: Eos earum vitae magnam sunt.
      id: Quod sunt quibusdam suscipit eos sequi dolores.
      secondName: Id recusandae qui mollitia blanditiis corrupti eum.
      signupType: Aspernatur dignissimos eligendi facere.
      type: Aliquam qui.
    items:
      $ref: '#/definitions/GoaLocalUser'
    title: 'Mediatype identifier: application/vnd.goa.local.user+json; type=collection'
    type: array
  Location:
    example:
      Lat: 0.37686312
      Lon: 0.47868878
    properties:
      Lat:
        example: 0.37686312
        format: double
        type: number
      Lon:
        example: 0.47868878
        format: double
        type: number
    title: Location
    type: object
  Login:
    example:
      email: Eum natus aut sapiente.
      signupType: Facilis ratione odio et.
      token: Doloribus in.
    properties:
      email:
        example: Eum natus aut sapiente.
        type: string
      signupType:
        example: Facilis ratione odio et.
        type: string
      token:
        example: Doloribus in.
        type: string
    required:
    - email
    - token
    - signupType
    title: Login
    type: object
  UpdateUser:
    example:
      area: Recusandae perferendis et optio id expedita.
      county: Aliquam exercitationem earum provident qui.
      email: Pariatur ut.
      firstName: Molestiae voluptatem quis voluptates.
      id: Eaque quia ut ut.
      image: Ad quia quo sequi minus dolores.
      secondName: Praesentium veniam soluta quia delectus dolor facere.
    properties:
      area:
        default: ""
        description: The area of the users local council
        example: Recusandae perferendis et optio id expedita.
        type: string
      county:
        default: ""
        description: The area of the users local council
        example: Aliquam exercitationem earum provident qui.
        type: string
      email:
        description: The email of the user
        example: Pariatur ut.
        type: string
      firstName:
        description: Name of the user
        example: Molestiae voluptatem quis voluptates.
        type: string
      id:
        description: Unique user ID
        example: Eaque quia ut ut.
        type: string
      image:
        default: ""
        description: an image url for the user
        example: Ad quia quo sequi minus dolores.
        type: string
      secondName:
        description: Name of the user
        example: Praesentium veniam soluta quia delectus dolor facere.
        type: string
    required:
    - firstName
    - secondName
    - email
    - id
    - area
    title: UpdateUser
    type: object
  User:
    example:
      ID: Inventore optio.
      area: Rerum debitis.
      county: Et sapiente nihil quod.
      email: Harum dolorum similique earum voluptas.
      firstName: Ipsa mollitia error impedit minima.
      image: Ea ex.
      location:
        Lat: 0.37686312
        Lon: 0.47868878
      secondName: Sed sapiente nemo rerum eum.
      signupType: Qui dolores dolores incidunt labore.
      token: Enim nesciunt minima ab.
      type: Qui velit natus officia reiciendis aut.
    properties:
      ID:
        default: ""
        description: Unique user ID
        example: Inventore optio.
        type: string
      area:
        default: ""
        description: The area of the users local council
        example: Rerum debitis.
        type: string
      county:
        default: ""
        description: The area of the users local council
        example: Et sapiente nihil quod.
        type: string
      email:
        description: The email of the user
        example: Harum dolorum similique earum voluptas.
        type: string
      firstName:
        description: Name of the user
        example: Ipsa mollitia error impedit minima.
        type: string
      image:
        default: ""
        description: an image url for the user
        example: Ea ex.
        type: string
      location:
        $ref: '#/definitions/Location'
      secondName:
        description: Name of the user
        example: Sed sapiente nemo rerum eum.
        type: string
      signupType:
        default: ""
        description: the signupType of user google local
        example: Qui dolores dolores incidunt labore.
        type: string
      token:
        description: This can be an oauth token or a password
        example: Enim nesciunt minima ab.
        type: string
      type:
        default: local
        description: the type of user admin local councillor
        example: Qui velit natus officia reiciendis aut.
        type: string
    required:
    - firstName
    - secondName
    - email
    - token
    title: User
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error'
    type: object
host: localhost:3000
info:
  description: A platform for interacting with you and local government
  title: You and local government
  version: ""
paths:
  /admin/councillor:
    post:
      description: |-
        admin api to add a councillor

        Required security scopes:
          * `admin:access`
      operationId: admin#createCouncillor
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized
      schemes:
      - http
      security:
      - jwt:
        - admin:access
      summary: createCouncillor admin
      tags:
      - admin
  /swagger-ui/{filepath}:
    get:
      operationId: swagger#/swagger-ui/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: Download swagger-ui/
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download swagger/swagger.json
  /user:
    get:
      description: |-
        get a list user

        Required security scopes:
          * `api:access`
      operationId: user#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaLocalUserCollection'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: list user
      tags:
      - user
  /user/{id}:
    delete:
      description: |-
        delete a user

        Required security scopes:
          * `api:access`
      operationId: user#delete
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "202":
          description: Accepted
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: delete user
      tags:
      - user
    get:
      description: |-
        get a user

        Required security scopes:
          * `api:access`
      operationId: user#read
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaLocalUser'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: read user
      tags:
      - user
    post:
      description: |-
        update a user

        Required security scopes:
          * `api:access`
      operationId: user#update
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUser'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaLocalUser'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: update user
      tags:
      - user
  /user/login:
    post:
      description: login user
      operationId: user#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Login'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GoaLocalUser'
      schemes:
      - http
      summary: login user
      tags:
      - user
  /user/signup:
    post:
      description: Signup a user
      operationId: user#signup
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "201":
          description: Created
        "404":
          description: Not Found
      schemes:
      - http
      summary: signup user
      tags:
      - user
produces:
- application/json
responses:
  Accepted:
    description: Accepted
  Created:
    description: Created
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/GoaLocalUser'
  Unauthorized:
    description: Unauthorized
schemes:
- http
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
